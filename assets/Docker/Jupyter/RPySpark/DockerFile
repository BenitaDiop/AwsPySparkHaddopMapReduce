FROM ubuntu:latest
RUN apt-get update && apt-get -y update
RUN apt-get install -y build-essential python3.6 python3-pip python3-dev
RUN pip3 -q install pip â€“upgrade
ARG BASE_CONTAINER=jupyter/minimal-notebook
FROM $BASE_CONTAINER

LABEL maintainer="Jupyter Project <jupyter@googlegroups.com>"

USER root
RUN mkdir src
WORKDIR src/
COPY . .
ENV APACHE_SPARK_VERSION=2.4.5 \
    HADOOP_VERSION=2.7
RUN apt-get update && \
    apt-get install -y --no-install-recommends ffmpeg dvipng && \
    rm -rf /var/lib/apt/lists/*
RUN apt-get -y update && \
    apt-get install --no-install-recommends -y openjdk-8-jre-headless ca-certificates-java && \
    rm -rf /var/lib/apt/lists/*
RUN cd /tmp && \
    wget -q $(wget -qO- https://www.apache.org/dyn/closer.lua/spark/spark-${APACHE_SPARK_VERSION}/spark-${APACHE_SPARK_VERSION}-bin-hadoop${HADOOP_VERSION}.tgz\?as_json | \
    python -c "import sys, json; content=json.load(sys.stdin); print(content['preferred']+content['path_info'])") && \
    echo "2426a20c548bdfc07df288cd1d18d1da6b3189d0b78dee76fa034c52a4e02895f0ad460720c526f163ba63a17efae4764c46a1cd8f9b04c60f9937a554db85d2 *spark-${APACHE_SPARK_VERSION}-bin-hadoop${HADOOP_VERSION}.tgz" | sha512sum -c - && \
    tar xzf spark-${APACHE_SPARK_VERSION}-bin-hadoop${HADOOP_VERSION}.tgz -C /usr/local --owner root --group root --no-same-owner && \
    rm spark-${APACHE_SPARK_VERSION}-bin-hadoop${HADOOP_VERSION}.tgz
RUN cd /usr/local && ln -s spark-${APACHE_SPARK_VERSION}-bin-hadoop${HADOOP_VERSION} spark
COPY mesos.key /tmp/
RUN apt-get -y update && \
    apt-get install --no-install-recommends -y gnupg && \
    apt-key add /tmp/mesos.key && \
    echo "deb http://repos.mesosphere.io/ubuntu xenial main" > /etc/apt/sources.list.d/mesosphere.list && \
    apt-get -y update && \
    apt-get --no-install-recommends -y install mesos=1.2\* && \
    apt-get purge --auto-remove -y gnupg && \
    rm -rf /var/lib/apt/lists/*
ENV SPARK_HOME=/usr/local/spark
ENV PYTHONPATH=$SPARK_HOME/python:$SPARK_HOME/python/lib/py4j-0.10.7-src.zip \
    MESOS_NATIVE_LIBRARY=/usr/local/lib/libmesos.so \
    SPARK_OPTS="--driver-java-options=-Xms1024M --driver-java-options=-Xmx4096M --driver-java-options=-Dlog4j.logLevel=info" \
    PATH=$PATH:$SPARK_HOME/bin
RUN conda install --quiet -y 'pyarrow' && \
    conda clean --all -f -y && \
    fix-permissions $CONDA_DIR && \
    fix-permissions /home/$NB_USER
USER $NB_UID
RUN pip3 install -r requirements.txt
RUN pip3 install jupyter
RUN python3 module.py
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    fonts-dejavu \
    unixodbc \
    unixodbc-dev \
    r-cran-rodbc \
    gfortran \
    gcc && \
    rm -rf /var/lib/apt/lists/*
RUN rm /src/data/raw_data.csv
RUN ln -s /bin/tar /bin/gtar

USER $NB_UID
RUN conda install --quiet --yes \
    'r-base=3.6.3' \
    'r-caret=6.0*' \
    'r-crayon=1.3*' \
    'r-devtools=2.3*' \
    'r-forecast=8.12*' \
    'r-hexbin=1.28*' \
    'r-htmltools=0.4*' \
    'r-htmlwidgets=1.5*' \
    'r-irkernel=1.1*' \
    'r-nycflights13=1.0*' \
    'r-plyr=1.8*' \
    'r-randomforest=4.6*' \
    'r-rcurl=1.98*' \
    'r-reshape2=1.4*' \
    'r-rmarkdown=2.1*' \
    'r-rodbc=1.3*' \
    'r-rsqlite=2.2*' \
    'r-shiny=1.4*' \
    'r-tidyverse=1.3*' \
    'unixodbc=2.3.*' \
    && \
    conda clean --all -f -y && \
    fix-permissions $CONDA_DIR
    RUN conda install --quiet --yes r-e1071
 RUN conda install --quiet --yes \
    'beautifulsoup4=4.9.*' \
    'conda-forge::blas=*=openblas' \
    'bokeh=2.0.*' \
    'bottleneck=1.3.*' \
    'cloudpickle=1.4.*' \
    'cython=0.29.*' \
    'dask=2.15.*' \
    'dill=0.3.*' \
    'h5py=2.10.*' \
    'hdf5=1.10.*' \
    'ipywidgets=7.5.*' \
    'ipympl=0.5.*'\
    'matplotlib-base=3.2.*' \
    # numba update to 0.49 fails resolving deps.
    'numba=0.48.*' \
    'numexpr=2.7.*' \
    'pandas=1.0.*' \
    'patsy=0.5.*' \
    'protobuf=3.11.*' \
    'pytables=3.6.*' \
    'scikit-image=0.16.*' \
    'scikit-learn=0.22.*' \
    'scipy=1.4.*' \
    'seaborn=0.10.*' \
    'sqlalchemy=1.3.*' \
    'statsmodels=0.11.*' \
    'sympy=1.5.*' \
    'vincent=0.4.*' \
    'widgetsnbextension=3.5.*'\
    'xlrd=1.2.*' \
    && \
    conda clean --all -f -y && \
    # Activate ipywidgets extension in the environment that runs the notebook server
    jupyter nbextension enable --py widgetsnbextension --sys-prefix && \
    # Also activate ipywidgets extension for JupyterLab
    # Check this URL for most recent compatibilities
    # https://github.com/jupyter-widgets/ipywidgets/tree/master/packages/jupyterlab-manager
    jupyter labextension install @jupyter-widgets/jupyterlab-manager@^2.0.0 --no-build && \
    jupyter labextension install @bokeh/jupyter_bokeh@^2.0.0 --no-build && \
    jupyter labextension install jupyter-matplotlib@^0.7.2 --no-build && \
    jupyter lab build -y && \
    jupyter lab clean -y && \
    npm cache clean --force && \
    rm -rf /home/$NB_USER/.cache/yarn && \
    rm -rf /home/$NB_USER/.node-gyp && \
    fix-permissions $CONDA_DIR && \
    fix-permissions /home/$NB_USER

# Install facets which does not have a pip or conda package at the moment
RUN cd /tmp && \
    git clone https://github.com/PAIR-code/facets.git && \
    cd facets && \
    jupyter nbextension install facets-dist/ --sys-prefix && \
    cd && \
    rm -rf /tmp/facets && \
    fix-permissions $CONDA_DIR && \
    fix-permissions /home/$NB_USER

# Import matplotlib the first time to build the font cache.
ENV XDG_CACHE_HOME /home/$NB_USER/.cache/
RUN MPLBACKEND=Agg python -c "import matplotlib.pyplot" && \
    fix-permissions /home/$NB_USER

USER $NB_UID
 
 
    ENV TINI_VERSION v0.6.0
ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /usr/bin/tini
RUN chmod +x /usr/bin/tini
ENTRYPOINT ["/usr/bin/tini", "--"]
CMD ["jupyter", "notebook", "--port=8888", "--no-browser", "--ip=0.0.0.0", "--allow-root"]
FROM alpine:3.8
LABEL maintainer "Jeroen Janssens <jeroen@datascienceworkshops.com>"

RUN apk update

RUN apk --no-cache add \
    R \
    R-dev \
    R-doc \
    arpack-dev \
    bash \
    bash-doc \
    bc \
    bc-doc \
    boost-dev \
    cmake \
    coreutils \
    coreutils-doc \
    curl \
    curl-doc \
    curl-dev \
    findutils \
    findutils-doc \
    font-adobe-100dpi \
    g++ \
    git \
    git-doc \
    gnuplot \
    go \
    grep \
    grep-doc \
    groff \
    jpeg-dev \
    jq \
    jq-doc \
    less \
    less-doc \
    libxml2-dev \
    m4 \
    man \
    man-pages \
    mdocml-apropos \
    ncurses \
    nodejs-lts \
    nodejs-npm \
    openjdk7 \
    openssl \
    p7zip \
    p7zip-doc \
    parallel \
    parallel-doc \
    perl-dev \
    py-lxml \
    py-pip \
    python3 \
    python3-dev \
    sed \
    sed-doc \
    sudo \
    sudo-doc \
    tar \
    tar-doc \
    tree \
    tree-doc \
    unrar \
    unrar-doc \
    unzip \
    unzip-doc \
    xmlstarlet \
    xmlstarlet-doc \
    zlib-dev

RUN echo "install.packages(c('tidyverse','ggmap'),repos='https://cloud.r-project.org')" | R --slave --no-save --no-restore-history

RUN easy_install-3.6 pip && \
    pip3 install --upgrade pip && \
    pip3 install \
    awscli \
    bigmler \
    csvkit \
    numpy \
    scipy \
    nose

RUN pip3 install skll

RUN pip2 install --upgrade pip && \
    pip2 install cssselect

RUN npm install -g \
    cowsay \
    xml2json-command

# tapkee
RUN curl -sL http://bitbucket.org/eigen/eigen/get/3.2.9.tar.gz > /tmp/eigen.tar.gz && \
    cd \tmp && \
    mkdir eigen && tar -xzvf eigen.tar.gz -C eigen --strip-components=1 && \
    cd eigen && \
    mkdir build && cd build && cmake .. && make && make install

RUN cd /tmp && \
    git clone https://github.com/lisitsyn/tapkee.git && \
    cd tapkee && mkdir build && cd build && cmake .. && make && \
    cp -v /tmp/tapkee/bin/tapkee /usr/bin


# feedgnuplot
RUN yes | cpan List::MoreUtils && \
    git clone https://github.com/dkogan/feedgnuplot.git && \
    cd feedgnuplot && \
    perl Makefile.PL && \
    make && \
    make install && \
    cd .. && \
    rm -r feedgnuplot

# pup
RUN export GOPATH=/usr && \
    go get github.com/ericchiang/pup && \
    go get github.com/jehiah/json2csv


# csvfix
RUN curl https://bitbucket.org/neilb/csvfix/get/version-1.6.zip > /tmp/csvfix.zip && \
    cd /tmp && \
    unzip csvfix.zip && \
    mv neilb* csvfix && \
    cd csvfix && \
    make lin && \
    mv csvfix/bin/csvfix /bin


# weka
RUN cd /tmp && \
    curl -L https://sourceforge.net/projects/weka/files/weka-3-8/3.8.1/weka-3-8-1.zip > weka.zip && \
    unzip weka.zip && \
    mv weka-3-8-1/weka.jar /bin


# curlicue
RUN cd /tmp &&\
    curl -L https://github.com/decklin/curlicue/archive/master.zip > curlicue.zip && \
    unzip curlicue.zip && \
    mv curlicue-master/curl* /bin


# drake and drip
RUN curl -L https://raw.githubusercontent.com/Factual/drake/master/bin/drake > /usr/bin/drake && \
    chmod 755 /usr/bin/drake
RUN SHELL=/bin/bash drake; exit 0
ENV JAVA_HOME=/usr/lib/jvm/default-jvm
RUN ln -sf "${JAVA_HOME}/bin/"* "/usr/bin/"
RUN curl -L https://raw.githubusercontent.com/ninjudd/drip/master/bin/drip > /usr/bin/drip && \
    chmod 755 /usr/bin/drip && \
    drip; exit 0


# csvquote
RUN cd /tmp && \
    git clone https://github.com/dbro/csvquote.git && \
    cd csvquote && \
    make && make BINDIR=/usr/bin/ install


# vowpal wabbit
RUN cd /tmp && \
    git clone --depth 1 --branch master --single-branch git://github.com/JohnLangford/vowpal_wabbit.git && \
    cd vowpal_wabbit && \
    make && \
    make install


# crush tools
RUN cd /tmp && \
    curl -L https://github.com/google/crush-tools/releases/download/20150716/crush-tools-20150716.tar.gz > crush-tools.tar.gz && \
    tar -xzvf crush-tools.tar.gz && \
    cd crush-tools-20150716/ && \
    sed -i '12i#include <sys/types.h>' src/fieldsplit/fieldsplit.c && \
    ./configure --prefix=/usr && \
    make && \
    make install


# data science at the command line tools, book content, and example data
RUN cd /tmp && \
    git clone https://github.com/jeroenjanssens/data-science-at-the-command-line.git && \
    cp -v data-science-at-the-command-line/tools/* /usr/bin/ && \
    cp -rv data-science-at-the-command-line/data /home/ && \
    cp -rv data-science-at-the-command-line/book /home/


RUN rm -rf /tmp/* /var/cache/apk/*

RUN echo "export PAGER='less'" >>~/.bashrc && \
    echo "export SHELL='/bin/bash'" >>~/.bashrc && \
    echo "alias l='ls -lph --group-directories-first'" >>~/.bashrc && \
    echo "alias parallel='parallel --will-cite'" >>~/.bashrc && \
    echo 'export PS1="\[\033[38;5;6m\][\w]$\[$(tput sgr0)\] "' >>~/.bashrc

RUN cat $(which weka) | sed -ne '/WEKAPATH=/,/complete /p' | cut -c3- | sed -e 's|/home/joe||' >>~/.bashrc

RUN apk --no-cache add msttcorefonts-installer fontconfig && \
    update-ms-fonts && fc-cache -f
RUN rm -rf /tmp/* /var/cache/apk/*

WORKDIR /data
CMD bash
